name: Build

on: 
  - push
  - pull_request


jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, macos-10.15]

    steps:
    - uses: actions/checkout@v2

    # Caching
    - name: Cache choosenim
      id: cache-choosenim
      uses: actions/cache@v1
      with:
        path: ~/.choosenim
        key: ${{ runner.os }}-choosenim-stable

    - name: Cache nimble
      id: cache-nimble
      uses: actions/cache@v1
      with:
        path: ~/.nimble
        key: ${{ runner.os }}-nimble-stable

    - name: Cache htslib
      id: cache-htslib
      uses: actions/cache@v1
      with:
        path: $HOME/htslib
        key: ${{ runner.os }}-htslib-1.10

    # Setup nim
    - uses: jiro4989/setup-nim-action@v1.0.2
      with:
          nim-version: 1.0.6

    # Install Dependencies
    - name: Install dependencies (Linux)
      if: matrix.os == "ubuntu-16.04"
      run: |
        sudo apt-get update
        sudo apt-get -qy install bwa make build-essential cmake libncurses-dev ncurses-dev libbz2-dev lzma-dev liblzma-dev \
             curl libssl-dev libtool autoconf automake libcurl4-openssl-dev

    # Setup htslib
    - name: Install htslib (linux)
      if: runner.os == 'Linux'
      run: |
        cd
        git clone --recursive https://github.com/samtools/htslib.git
        cd htslib && git checkout 1.10 && autoheader && autoconf && ./configure --enable-libcurl
        cd
        make -j 4 -C htslib
        echo "::set-env LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${HOME}/htslib"
        ls -lh $HOME/htslib/*.so

    - name: Install hstlib (macos)
      if: runner.os == 'macOS'
      run: |
        brew install htslib

    # Build and Test
    - name: Build executable
      run: nimble build -Y sc.nimble

    - name: "Copy binary"
      run: chmod +x sc && mkdir bin && cp sc bin/sc_${{ matrix.os }}
    
    - name: Functional Tests
      env:
        TERM: "xterm"
      run: |
        bash ./scripts/functional-tests.sh

    - name: Unit Tests
      run: |
        echo "Great"

    #- run: nimble test -Y
    - name: Upload Artifact
      if: success()
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: sc_${{ matrix.os }}
        path: bin
